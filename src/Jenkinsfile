node {

    env.AWS_ECR_LOGIN=true
    def newApp
    def registry = 'karimamch/dockerjenkins'
    def registryCredential = 'karimamch'

        stage('Git') {
		git 'https://github.com/KaMech/Jenkins.git'
	        }
       stage ('Setup Python 2.7'){
        def pythonBin = tool 'python27'
        // Jenkins docker image has Jenkins user's home in "/var/jenkins_home"
        sh "rm -Rf /var/jenkins_home/tools/python ; mkdir -p /var/jenkins_home/tools/python"
        // Link python to python 2.7
        sh "ln -s ${pythonBin} /var/jenkins_home/tools/python/python"
        // Include link in path --don't use "~" in path, it won't be resolved
        env.PATH = "~/tools/python:${env.PATH}:~/tools/python"
        // Displays correctly Python 2.7
        sh "python --version"
        }
        stage('build') {
               
                sh 'python --version'
		
                sh 'pip install Flask'
	}   
        
        stage('test') {
           
                sh 'python app.py'
            
        }

        stage('Building image') {
        docker.withRegistry( 'https://' + registry, registryCredential ) {
		    def buildName = registry + ":$BUILD_NUMBER"
			newApp = docker.build buildName
			newApp.push()
            }
	    }
	stage('Registring image') {
        docker.withRegistry( 'https://' + registry, registryCredential ) {
    		newApp.push 'latest2'
            }
	    }

        stage('Removing image') {
        sh "docker rmi $registry:$BUILD_NUMBER"
        sh "docker rmi $registry:latest"
        }





    
}
